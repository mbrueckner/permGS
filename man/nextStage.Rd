% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/permLR.R
\name{nextStage}
\alias{nextStage}
\title{nextStage}
\usage{
nextStage(pgs.obj, alpha, time, status, trt, strata)
}
\arguments{
\item{pgs.obj}{permGS object as returned by \code{\link{createPermGS}}}

\item{alpha}{alpha at current stage}

\item{time}{event times}

\item{status}{censoring indicator}

\item{trt}{treatment indicator}

\item{strata}{stratum indicator}
}
\value{
An updated permGS object.
}
\description{
Imputation permutation group-sequential log-rank test.
Random permutations of a block a reused in all later stages. This automatically
results in blockwise permutations.
}
\examples{
## Two-stage design with one-sided O'Brien-Fleming boundaries using IPZ method
x <- createPermGS(1000, TRUE, "IPZ")

t1 <- 9  ## calendar time of interim analysis
t2 <- 18  ## calendar time of final analysis

T <- rexp(100) ## event times
R <- runif(100, 0, 12)  ## recruitment times
Z <- rbinom(100, 1, 0.5)  ## treatment assignment
C <- rexp(100) ## drop-out times

## Stage 1 data
data.t1 <- data.frame(time=pmin(T, C, max(0, (t1-R))), status=(T<=pmin(C, t1-R)), trt=Z)
data.t1 <- data.t1[R <= t1,]

## Stage 2 data
data.t2 <- data.frame(time=pmin(T, C, max(0, (t2-R))), status=(T<=pmin(C, t2-R)), trt=Z)
data.t2 <- data.t2[R <= t2,] 
x <- nextStage(x, 0.00153, data.t1$time, data.t1$status, data.t1$trt, rep.int(1, nrow(data.t1)))
summary(x)

if(!x$results$reject[1]) {
   x <- nextStage(x, alpha=0.025, time=data.t2$time, status=data.t2$status, trt=data.t2$trt,
          strata=rep.int(c(1,2), c(nrow(data.t1), nrow(data.t2)-nrow(data.t1))))
   summary(x)
}
}

